/*******************
*
* Author: Istamosh
*
********************/

/* #header{
  position:absolute;
  top: 0;
  left: 0;
} */

/* targets all header's p tag */
/* #header p{
  font-size: 24px;
} */

/*
a{
  text-decoration: underline;
  color: blue;
}

span{
  text-transform: uppercase;
}

/* this will be prioritized because has ID
#header h1{
  font-size: 40px;
  color: black;
  background-color: grey;
}

h1{
  font-size: 32px
}

/* ID wins, while class gets the second priority
#header p{
  color: gray;
}
.ward {
  color: lime;
}
.subdistrict {
  color: aqua;
  background-color: darkgray;
}
p{
  color: violet;
}
strong{
  color: red;
}
/* 1st and 2nd is gray, 3rd is aqua, 4th is green

div{
  width: 100%;
}

h2{
  font-size: 20px;
}

/* override all styles with this content header ID
/* #content-header{
  font-size: 18px;
  color: red;
}

span{
  display: block;
  color: blue;
}

/* override all styles inside deck class
.deck{
  color: brown;
}

body{
  color: red;
}
/* override body color to green
p{
  color: green;
}
/* only below selector can override <a> tag
a{
  color: magenta;
}
*/

/*
/* important function beside declaration
p{
  color: red !important;
}
*/

/* using one declaration for multiple selector */
/*p, span{
  font-size: 14px;
  font-weight: bold;
  font-family: Arial;
}*/

/* using closed elbow brackets to exlude formatting on
any sub-children (sub-content etc.) */
#main-content > p{
  color: green;
}

/* we want to declare P tag on subcontent without
including the P tag on parent content (main-content) */
#main-content #sub-content p{
  color: teal;
}

/* using adhacent selector to select specific element
adjacent that comes after H2
without touching the other similar element below it */
#all-posts h2 + p{
  color: lime;
}

/* using precedent selector for the opposite, and not work
right after all-posts ID because p is the first selected,
not the first h2*/
#all-posts p ~ h2{
  color: olive;
}

/* using attribute selector to select all attribute
by its selector */
span[class]{
  color: purple;
}

/* using more specific attribute selector */
span[class="Day"]{
  color: maroon;
}

/* using tilde sign wildcard naming that contains some name */
span[class~="Gregorian"]{
  color: aqua;
}

/* using dollar sign wildcard naming that ends with some name */
a[href$="zip"]{
  background-color: gray;
}

/* using caret sign wildcard naming that starts with some name */
a[href^="https"]{
  color: crimson;
}

/* using pseudo class and add hover effect on every links*/
a:hover{
  color: darkred;
}

/* added active effect */
a:active{
  color: orange;
}

/* added already visited effect */
a:visited{
  color: gray;
}

/* first child selector
article p:first-child{
  font-weight: bold;
}*/

/* last child selector
article p:last-child{
  color: red;
}*/

/* select the first type of p inside article */
article p:first-of-type{
  font-weight: bold;
}

/* select the last type of p inside article */
article p:last-of-type{
  color: red;
}

/* select the service 2 and 8 inside list page */
li:nth-child(3), li:nth-child(10){
  color: blue;
}

/* select the title of list */
li:nth-child(1), li:nth-child(7){
  font-weight: bold;
}

/* select the odd numbers, same as (odd) */
li:nth-child(2n+1){
  background-color: grey;
}

/* select the even numbers, same as (even) */
li:nth-child(2n+2){
  background-color: lime;
}

/* select the odd article rows */
article:nth-of-type(2n+1){
  background-color: grey;
}

/* select only the featured-content class on article */
article.featured-content{
  background: cyan;
}

/* select only the featured-content class on div */
div.featured-content{
  background: khaki;
}

/* universal selector example, all text will be red color
*{
  color: red;
}*/

/* make article to 16px font */
article{
  font-size: 16px;
}

/* make article's h2 font 3 times bigger */
article h2{
  font-size: 3em;
}

/* make article' p font smaller by percentage */
article p{
  font-size: 125%;
}

/* add font family, priorities comes from left to right */
article h2, article p{
  font-family: nonExistentFont, nonExistentFont2, helvetica, sans-serif;
}

/* override article's anchor underlined text to none */
article a{
  text-decoration: none;
}

/* override article's h2 text to normal (DBS: bold) */
article h2{
  font-weight: normal;
}

/* override article's p text to lighter w/ custom font family (DBS: normal) */
article p{
  font-weight: lighter;
  font-family: "Adobe Arabic";
}

/* transform header p (index) into uppercase every letter */
#header p{
  text-transform: uppercase;
}

/* transform body direct descendant/child p into capital */
body > p{
  text-transform: capitalize;
}
